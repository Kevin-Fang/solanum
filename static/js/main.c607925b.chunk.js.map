{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","backgroundImages","require","backgrounds","defaultTimes","mainTimer","shorterTimer","longerTimer","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","snackbarQueue","componentDidMount","document","addEventListener","spaceFunction","title","concat","getFormattedTime","string","setTimeout","setState","screenAvailable","map","img","Image","src","event","keyCode","state","timer","stopTimer","startTimer","preventDefault","toggleTimer","changeTimer","name","value","callback","timers","assign","getCurrentTimer","activeTime","timerInterval","setInterval","alert","resetTime","openSnackbar","clearInterval","changeDefaultTime","dialogOpen","timeLeft","padTime","time","length","minutes","String","Math","floor","seconds","getSecondsDisplay","react_default","a","createElement","dist_default","style","margin","getMinutesDisplay","console","log","message","push","key","Date","getTime","snackbarOpen","snackbarMessage","processQueue","shift","closeSnackbar","reason","handleExited","getSnackBar","_this$state$snackbarM","Snackbar_default","anchorOrigin","vertical","horizontal","open","onExited","autoHideDuration","onClose","ContentProps","aria-describedby","id","getDonateButton","position","bottom","left","textAlign","fontSize","action","method","type","height","alt","width","incBackground","imageNum","handleTabChange","activeTab","handleCloseDialog","mainTimerChangeValue","shortTimerChangeValue","longTimerChangeValue","cancelDialog","_this2","Fade_default","in","className","backgroundImage","minWidth","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","label","placeholder","autoFocus","marginRight","onChange","e","target","DialogActions_default","Button_default","onClick","color","paddingTop","Tabs_default","indicatorColor","textColor","centered","Tab_default","Grid_default","container","spacing","direction","alignItems","justify","marginTop","Paper_default","paddingLeft","paddingRight","paddingBottom","fontFamily","top","right","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,ilBCuBpCC,UAAmBC,EAAQ,KAAsBC,aAEjDC,EAAe,CACjBC,UAAW,KACXC,aAAc,IACdC,YAAa,KA+ZAC,cA1Zb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAFRQ,cAAgB,GACGP,EAuBnBQ,kBAAoB,WAElBC,SAASC,iBAAiB,UAAWV,EAAKW,eAAe,GAEzDF,SAASG,MAAT,IAAAC,OAAqBb,EAAKc,mBAAmBC,OAA7C,aAEAC,WAAW,WACThB,EAAKiB,SAAS,CACZC,iBAAiB,KAElB,KACH3B,EAAiB4B,IAAI,SAAAC,IACA,IAAIC,OACVC,IAAMF,KApCJpB,EAyCnBW,cAAgB,SAACY,GAEO,KAAlBA,EAAMC,UACiB,OAArBxB,EAAKyB,MAAMC,MACb1B,EAAK2B,YAEL3B,EAAK4B,aAEPL,EAAMM,mBAjDS7B,EAsDnB8B,YAAc,WACa,OAArB9B,EAAKyB,MAAMC,MACb1B,EAAK4B,aAEL5B,EAAK2B,aA1DU3B,EA+DnB+B,YAAc,SAACC,EAAMC,EAAOC,GAC1B,IAAIC,EAASlC,OAAOmC,OAAOpC,EAAKyB,MAAMU,QACtCA,EAAOH,GAAQC,EACfjC,EAAKiB,SAAS,CACZkB,UACCD,IApEclC,EAwEnBqC,gBAAkB,WAChB,OAAOrC,EAAKyB,MAAMU,OAAOnC,EAAKyB,MAAMa,aAzEnBtC,EA6EnB4B,WAAa,WAEX,GAAyB,OAArB5B,EAAKyB,MAAMC,MAAgB,CAC7B,IAAIa,EAAgBC,YAAY,WAE9BxC,EAAK+B,YAAY/B,EAAKyB,MAAMa,WAAYtC,EAAKqC,kBAAoB,EAAG,WAChE5B,SAASG,MAAT,IAAAC,OAAqBb,EAAKc,mBAAmBC,OAA7C,aACIf,EAAKqC,kBAAoB,IAC3BI,MAAM,cACNzC,EAAK0C,gBAGV,KAEH1C,EAAK2C,aAAa,iBAClB3C,EAAKiB,SAAS,CACZS,MAAOa,SAGTvC,EAAK2C,aAAa,0BAhGH3C,EAoGnB2B,UAAY,WAEe,OAArB3B,EAAKyB,MAAMC,QACbkB,cAAc5C,EAAKyB,MAAMC,OACzB1B,EAAKiB,SAAS,CACZS,MAAO,OAET1B,EAAK2C,aAAa,mBA3GH3C,EA+GnB6C,kBAAoB,WAClB7C,EAAKiB,SAAS,CACZ6B,YAAY,KAjHG9C,EAsHnBc,iBAAmB,WACjB,IAAIiC,EAAW/C,EAAKqC,kBAChBW,EAAU,SAACC,GACb,KAAOA,EAAKC,OAAS,GACjBD,EAAO,IAAMA,EACjB,OAAOA,GAELE,EAAUH,EAAQI,OAAOC,KAAKC,MAAMP,EAAW,MAC/CQ,EAAUP,EAAQI,OAAOC,KAAKC,MAAMP,EAAqB,GAAVI,KACnD,MAAO,CACLA,QAASA,EACTI,QAASA,EACTxC,OAAM,GAAAF,OAAKsC,EAAL,KAAAtC,OAAgB0C,KAlIPvD,EAsInBwD,kBAAoB,WAClB,IAAID,EAAUvD,EAAKc,mBAAmByC,QACtC,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAUG,MAAO,CAACC,OAAQ,GAAI7B,MAAOsB,EAAQ,KAC7CE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAUG,MAAO,CAACC,OAAQ,GAAI7B,MAAOsB,EAAQ,OA3IhCvD,EAgJnB+D,kBAAoB,WAClB,IAAIZ,EAAUnD,EAAKc,mBAAmBqC,QAEtC,OADAa,QAAQC,IAAId,GAEVM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAUG,MAAO,CAACC,OAAQ,GAAI7B,MAAOkB,EAAQ,KAC7CM,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAUG,MAAO,CAACC,OAAQ,GAAI7B,MAAOkB,EAAQ,OAtJhCnD,EA2JnB2C,aAAe,SAACuB,GACdlE,EAAKO,cAAc4D,KAAK,CACtBD,UACAE,KAAK,IAAIC,MAAOC,YAEdtE,EAAKyB,MAAM8C,aACbvE,EAAKiB,SAAS,CACZsD,cAAc,EACdC,gBAAiB,KAGnBxE,EAAKyE,gBAtKUzE,EA0KnByE,aAAe,WACTzE,EAAKO,cAAc2C,OAAS,GAC9BlD,EAAKiB,SAAS,CACZuD,gBAAiBxE,EAAKO,cAAcmE,QACpCH,cAAc,KA9KDvE,EAmLnB2E,cAAgB,SAACpD,EAAOqD,GACtB5E,EAAKiB,SAAS,CACZsD,cAAc,EACdC,gBAAiB,MAtLFxE,EA0LnB6E,aAAe,WACb7E,EAAKyE,gBA3LYzE,EA8LnB8E,YAAc,WAAM,IAAAC,EACO/E,EAAKyB,MAAM+C,gBAA5BN,EADUa,EACVb,QAASE,EADCW,EACDX,IACjB,OACEX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACEU,IAAKA,EACLa,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAMpF,EAAKyB,MAAM8C,aACjBc,SAAUrF,EAAKyB,MAAMoD,aACrBS,iBAAkB,IAClBC,QAASvF,EAAK2E,cACda,aAAc,CACZC,mBAAoB,cAEtBvB,QAAST,EAAAC,EAAAC,cAAA,QAAM+B,GAAG,cAAcxB,OA/MrBlE,EAqNnB2F,gBAAkB,WAChB,OACIlC,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAC+B,SAAU,WAAYC,OAAQ,GAAIC,KAAM,GAAIC,UAAW,OAAQC,SAAU,KACpFvC,EAAAC,EAAAC,cAAA,QAAMsC,OAAO,wCAAwCC,OAAO,OAAOrC,MAAO,CAACiC,KAAM,KAC/ErC,EAAAC,EAAAC,cAAA,SAAOwC,KAAK,SAASnE,KAAK,WAAWC,MAAM,yBAC3CwB,EAAAC,EAAAC,cAAA,SAAOwC,KAAK,SAASnE,KAAK,MAAMC,MAAM,eACtCwB,EAAAC,EAAAC,cAAA,SAAOwC,KAAK,SAASnE,KAAK,YAAYC,MAAM,0BAC5CwB,EAAAC,EAAAC,cAAA,SAAOwC,KAAK,SAASnE,KAAK,cAAcC,MAAM,OAC9CwB,EAAAC,EAAAC,cAAA,SAAOwC,KAAK,SAASnE,KAAK,gBAAgBC,MAAM,QAChDwB,EAAAC,EAAAC,cAAA,SAAOwC,KAAK,QAAQnE,KAAK,SAASV,IAAI,gFAAgFuC,MAAO,CAACuC,OAAQ,IAAKC,IAAI,qBAC/I5C,EAAAC,EAAAC,cAAA,OAAK0C,IAAI,GAAGC,MAAM,IAAIF,OAAO,IAAI9E,IAAI,yDAChCmC,EAAAC,EAAAC,cAAA,WATT,0CAUyCF,EAAAC,EAAAC,cAAA,WAVzC,kDAWiDF,EAAAC,EAAAC,cAAA,WAXjD,0CAYyCF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAZ9C,wFAvNa3D,EAyOnBuG,cAAgB,WACd,IAAarE,IAmBP,WACJlB,WAAW,WAdU,IAACkB,IAeH,WACflB,WAAW,WAVF,IAACkB,EACdlC,EAAKiB,SAAS,CACZC,iBAAiB,GAChBgB,IASI,MAjBPlC,EAAKiB,SAAS,CACZuF,UAAWxG,EAAKyB,MAAM+E,SAAW,GAAKjH,EAAiB2D,QACtDhB,IAiBA,MAzBHlC,EAAKiB,SAAS,CACZC,iBAAiB,GAChBgB,IA7OYlC,EAyQnB0C,UAAY,WACV1C,EAAK2B,YAEL3B,EAAK+B,YAAY/B,EAAKyB,MAAMa,WAAY5C,EAAaM,EAAKyB,MAAMa,cA5Q/CtC,EA+QnByG,gBAAkB,SAAClF,EAAOU,GACxBjC,EAAK2B,YAEL3B,EAAKiB,SAAS,CACZyF,UAAWzE,EACXK,WAHW,CAAC,YAAa,eAAgB,eAGtBL,IAClB,WACDxB,SAASG,MAAT,IAAAC,OAAqBb,EAAKc,mBAAmBC,OAA7C,gBAtRef,EA0RnB2G,kBAAoB,WAClBjH,EAAY,UAAkD,GAAlCM,EAAKyB,MAAMmF,qBACvClH,EAAY,aAAsD,GAAnCM,EAAKyB,MAAMoF,sBAC1CnH,EAAY,YAAoD,GAAlCM,EAAKyB,MAAMqF,qBACzC9G,EAAKiB,SAAS,CACZ6B,YAAY,KA/RG9C,EAmSnB+G,aAAe,WACb/G,EAAKiB,SAAS,CACZ6B,YAAY,KAnSd9C,EAAKyB,MAAQ,CACXa,WAAY,YACZH,OAAQ,CACNxC,UAAWD,EAAY,UACvBE,aAAcF,EAAY,aAC1BG,YAAaH,EAAY,aAE3BqD,SAAU,KACVwB,cAAc,EACdC,gBAAiB,GACjB9C,MAAO,KACP8E,SAAU,EACVE,UAAW,EACXxF,iBAAiB,EACjB4B,YAAY,EACZ8D,qBAAsBlH,EAAY,UAAgB,GAClDmH,sBAAuBnH,EAAY,aAAmB,GACtDoH,qBAAsBpH,EAAY,YAAkB,IAnBrCM,wEAySV,IAAAgH,EAAA7G,KAEP,OACEsD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAMwD,GAAI/G,KAAKsB,MAAMP,iBACnBuC,EAAAC,EAAAC,cAAA,OAAKwD,UAAU,MAAMtD,MAAO,CAACuD,gBAAe,OAAAvG,OAAStB,EAAiBY,KAAKsB,MAAM+E,UAArC,KAAmDa,SAAU,MACtGlH,KAAK2E,cACNrB,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACE0B,KAAMjF,KAAKsB,MAAMqB,YACjBW,EAAAC,EAAAC,cAAC4D,EAAA7D,EAAD,iBACAD,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,KACED,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,qEAGAD,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CACEiE,MAAM,aACNC,YAAY,YACZ9D,OAAO,QACP+D,WAAS,EACThE,MAAO,CAACyC,MAAO,MAAOwB,YAAa,MACnC3B,KAAK,SACLlE,MAAO9B,KAAKsB,MAAMmF,qBAClBmB,SAAU,SAACC,GACLA,EAAEC,OAAOhG,MAAQ,GAAK+F,EAAEC,OAAOhG,OAAS,IAC1C+E,EAAK/F,SAAS,CACZ2F,qBAAsBoB,EAAEC,OAAOhG,WAKvCwB,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CACEiE,MAAM,gBACNC,YAAY,YACZ9D,OAAO,QACPqC,KAAK,SACLtC,MAAO,CAACyC,MAAO,MAAOwB,YAAa,MACnC7F,MAAO9B,KAAKsB,MAAMoF,sBAClBkB,SAAU,SAACC,GACLA,EAAEC,OAAOhG,MAAQ,GACnB+E,EAAK/F,SAAS,CACZ4F,sBAAuBmB,EAAEC,OAAOhG,WAKxCwB,EAAAC,EAAAC,cAAC+D,EAAAhE,EAAD,CACEiE,MAAM,eACNC,YAAY,YACZ9D,OAAO,QACPD,MAAO,CAACyC,MAAO,MAAOwB,YAAa,MACnC3B,KAAK,SACLlE,MAAO9B,KAAKsB,MAAMqF,qBAClBiB,SAAU,SAACC,GACLA,EAAEC,OAAOhG,MAAQ,GACnB+E,EAAK/F,SAAS,CACZ6F,qBAAsBkB,EAAEC,OAAOhG,YAMzCwB,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,KACED,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQ0E,QAASjI,KAAK4G,aAAcsB,MAAM,WAA1C,UAGA5E,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQ0E,QAASjI,KAAKwG,kBAAmB0B,MAAM,WAA/C,QAKJ5E,EAAAC,EAAAC,cAAA,OAAKwD,UAAU,QAAQtD,MAAO,CAACmC,SAAU,MAAOsC,WAAY,KAA5D,WAGA7E,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACC,OAAQ,KACnBL,EAAAC,EAAAC,cAAA,iCADF,4BAGAF,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACEyD,UAAU,OACVqB,eAAe,UACfC,UAAU,UACVC,UAAQ,EACR7E,MAAO,CAACC,OAAQ,GAChBiE,SAAU5H,KAAKsG,gBACfxE,MAAO9B,KAAKsB,MAAMiF,WAElBjD,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,CAAKiE,MAAM,UACXlE,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,CAAKiE,MAAM,kBACXlE,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,CAAKiE,MAAM,kBAEblE,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CACEmF,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,QAAQ,SACRpF,MAAO,CAACqF,UAAW,KACnBzF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAOyD,UAAU,QAAQtD,MAAO,CAACuF,YAAa,GAAIC,aAAc,GAAIC,cAAe,KAChFnJ,KAAK4D,oBACNN,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACmC,SAAU,OAAQqC,MAAO,UAAWkB,WAAY,SAA7D,KACCpJ,KAAKqD,sBAGVC,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQ2E,MAAM,UAAUD,QAASjI,KAAKuC,UAAWmB,MAAO,CAACC,OAAQ,KAAjE,SACAL,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQ2E,MAA4B,OAArBlI,KAAKsB,MAAMC,MAAiB,UAAY,YAAa0G,QAASjI,KAAK2B,aAAmC,OAArB3B,KAAKsB,MAAMC,MAAiB,cAAgB,cAC5I+B,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQ2E,MAAM,UAAUD,QAASjI,KAAK0C,kBAAmBgB,MAAO,CAACC,OAAQ,KAAzE,gBACAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAQG,MAAO,CAACC,OAAQ,GAAI8B,SAAU,WAAY4D,IAAK,EAAGC,MAAO,GAAIrB,QAASjI,KAAKoG,eAAnF,qBACCpG,KAAKwF,2BArZE+D,aCnBEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxG,EAAAC,EAAAC,cAACuG,EAAD,MAASzJ,SAAS0J,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c607925b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// Material-ui components\nimport Fade from '@material-ui/core/Fade'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Button from '@material-ui/core/Button'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\n\n// Odometer stuff\nimport Odometer from 'react-odometerjs'\nimport './odometer-theme-plaza.css'\n\nlet backgroundImages = require('./backgrounds.json').backgrounds\n\nlet defaultTimes = {\n  mainTimer: 1500,\n  shorterTimer: 300,\n  longerTimer: 900\n}\n\nclass App extends Component {\n  snackbarQueue = []\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeTime: 'mainTimer',\n      timers: {\n        mainTimer: defaultTimes['mainTimer'],\n        shorterTimer: defaultTimes['shorterTimer'],\n        longerTimer: defaultTimes['longerTimer']\n      },\n      timeLeft: 1500,\n      snackbarOpen: false,\n      snackbarMessage: \"\",\n      timer: null,\n      imageNum: 0,\n      activeTab: 0,\n      screenAvailable: false,\n      dialogOpen: false,\n      mainTimerChangeValue: defaultTimes['mainTimer'] / 60,\n      shortTimerChangeValue: defaultTimes['shorterTimer'] / 60,\n      longTimerChangeValue: defaultTimes['longerTimer'] / 60\n    }\n  }\n\n  componentDidMount = () => {\n    // Add space listener to toggle time\n    document.addEventListener(\"keydown\", this.spaceFunction, false);\n    // set title to the time\n    document.title = `[${this.getFormattedTime().string}] Solanum`\n    // fade into main screen\n    setTimeout(() => {\n      this.setState({\n        screenAvailable: true\n      })\n    }, 200)\n    backgroundImages.map(img => {\n      let imgComponent = new Image()\n      imgComponent.src = img\n    })\n    //document.addEventListener(\"keyup\", this.spaceFunction, false);\n  }\n\n  spaceFunction = (event) => {\n    // If space, toggle the timer\n    if (event.keyCode === 32) {\n      if (this.state.timer !== null) {\n        this.stopTimer()\n      } else {\n        this.startTimer()\n      }\n      event.preventDefault()\n    } \n  }\n\n  // toggle time running\n  toggleTimer = () => {\n    if (this.state.timer === null) {\n      this.startTimer()\n    } else {\n      this.stopTimer()\n    }\n  }\n\n  // Change a certain timer\n  changeTimer = (name, value, callback) => {\n    let timers = Object.assign(this.state.timers)\n    timers[name] = value\n    this.setState({\n      timers\n    }, callback)\n  }\n\n  // get the current timer's value\n  getCurrentTimer = () => {\n    return this.state.timers[this.state.activeTime]\n  }\n\n  // start the timer\n  startTimer = () => {\n    // Create timer interval\n    if (this.state.timer === null) {\n      let timerInterval = setInterval(() => {\n        // save other timer objects\n        this.changeTimer(this.state.activeTime, this.getCurrentTimer() - 1, () => {\n            document.title = `[${this.getFormattedTime().string}] Solanum`\n            if (this.getCurrentTimer() < 0) {\n              alert(\"Time's up!\")\n              this.resetTime()\n            }\n        })\n      }, 1000)\n      // open timer\n      this.openSnackbar(\"Timer started\")\n      this.setState({\n        timer: timerInterval,\n      })\n    } else {\n      this.openSnackbar(\"Timer already running\")\n    }\n  }\n\n  stopTimer = () => {\n    // Remove timer interval\n    if (this.state.timer !== null) {\n      clearInterval(this.state.timer)\n      this.setState({\n        timer: null\n      })\n      this.openSnackbar(\"Timer stopped\")\n    }\n  }\n\n  changeDefaultTime = () => {\n    this.setState({\n      dialogOpen: true\n    })\n  }\n\n  // return a string formatted time with minutes, seconds, and a complete string\n  getFormattedTime = () => {\n    let timeLeft = this.getCurrentTimer()\n    let padTime = (time) => {\n      while (time.length < 2)\n          time = \"0\" + time;\n      return time\n    }\n    let minutes = padTime(String(Math.floor(timeLeft / 60)))\n    let seconds = padTime(String(Math.floor(timeLeft - minutes * 60)))\n    return {\n      minutes: minutes,\n      seconds: seconds,\n      string: `${minutes}:${seconds}`\n    }\n  }\n\n  getSecondsDisplay = () => {\n    let seconds = this.getFormattedTime().seconds\n    return (\n      <div>\n        <Odometer style={{margin: 0}} value={seconds[0]}/>\n        <Odometer style={{margin: 0}} value={seconds[1]}/>\n      </div>\n    )\n  }\n\n  getMinutesDisplay = () => {\n    let minutes = this.getFormattedTime().minutes\n    console.log(minutes)\n    return (\n      <div>\n        <Odometer style={{margin: 0}} value={minutes[0]}/>\n        <Odometer style={{margin: 0}} value={minutes[1]}/>\n      </div>\n    )\n  }\n\n  openSnackbar = (message) => {\n    this.snackbarQueue.push({\n      message,\n      key: new Date().getTime()\n    })\n    if (this.state.snackbarOpen) {\n      this.setState({\n        snackbarOpen: false,\n        snackbarMessage: \"\"\n      })\n    } else {\n      this.processQueue()\n    }\n  }\n\n  processQueue = () => {\n    if (this.snackbarQueue.length > 0) {\n      this.setState({\n        snackbarMessage: this.snackbarQueue.shift(),\n        snackbarOpen: true\n      })\n    }\n  }\n\n  closeSnackbar = (event, reason) => {\n    this.setState({\n      snackbarOpen: false,\n      snackbarMessage: \"\"\n    })\n  }\n\n  handleExited = () => {\n    this.processQueue()\n  }\n\n  getSnackBar = () => {\n    const { message, key } = this.state.snackbarMessage\n    return (\n      <div>\n        <Snackbar\n          key={key}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.snackbarOpen}\n          onExited={this.state.handleExited}\n          autoHideDuration={1000}\n          onClose={this.closeSnackbar}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{message}</span>}\n        />\n      </div>\n      )\n  }\n\n  getDonateButton = () => {\n    return (\n        <div style={{position: 'absolute', bottom: 10, left: 10, textAlign: 'left', fontSize: 12}}>\n          <form action=\"https://www.paypal.com/cgi-bin/webscr\" method=\"post\" style={{left: 10}}>\n            <input type=\"hidden\" name=\"business\" value=\"kevinzfang@gmail.com\"/>\n            <input type=\"hidden\" name=\"cmd\" value=\"_donations\"/>\n            <input type=\"hidden\" name=\"item_name\" value=\"SolanumTi.me Donation\"/>\n            <input type=\"hidden\" name=\"item_number\" value=\"<3\"/>\n            <input type=\"hidden\" name=\"currency_code\" value=\"USD\"/>\n            <input type=\"image\" name=\"submit\" src=\"https://mightywriters.org/wp-content/uploads/2016/12/button-PayPal-donate.png\" style={{height: 40}} alt=\"Donate on Paypal\"/>\n            <img alt=\"\" width=\"1\" height=\"1\" src=\"https://www.paypalobjects.com/en_US/i/scr/pixel.gif\" />\n          </form><br/>\n          BTC: 3M4TYqtT5vCL7xNQoeSaU1GyQhb3z7NNLo<br/>\n          ETH: 0xdA3256801BB158BCbC3Fb12fA471D854ee64A31E<br/>\n          LTC: MPvUK7vt3U45SUqJT3XHHhMGMMJ3oPbA9s<br/><br/>\n          Donate to help pay for server and domain costs! Solanum is and will always be free.\n        </div>\n    )\n  }\n\n  incBackground = () => {\n    let clear = (callback) => {\n      this.setState({\n        screenAvailable: false\n      }, callback)\n    }\n\n    let changeBackground = (callback) => {\n      this.setState({\n        imageNum: (this.state.imageNum + 1) % backgroundImages.length,\n      }, callback)\n    }\n\n    let reappear = (callback) => {\n      this.setState({\n        screenAvailable: true\n      }, callback)\n    }\n\n    // first clear, then wait 200ms, then change background, then wait 200ms, then reappear.\n    clear(() => {\n      setTimeout(() => {\n        changeBackground(() => {\n          setTimeout(() => {\n            reappear()\n          }, 200)\n        })\n      }, 200)\n    })\n    \n  }\n\n  resetTime = () => {\n    this.stopTimer()\n    // reset to default time for now.\n    this.changeTimer(this.state.activeTime, defaultTimes[this.state.activeTime])\n  }\n\n  handleTabChange = (event, value) => {\n    this.stopTimer()\n    let timers = [\"mainTimer\", \"shorterTimer\", \"longerTimer\"]\n    this.setState({\n      activeTab: value,\n      activeTime: timers[value]\n    }, () => {\n      document.title = `[${this.getFormattedTime().string}] Solanum`\n    })\n  }\n\n  handleCloseDialog = () => {\n    defaultTimes['mainTimer'] = this.state.mainTimerChangeValue * 60\n    defaultTimes['shorterTimer'] = this.state.shortTimerChangeValue * 60\n    defaultTimes['longerTimer'] = this.state.longTimerChangeValue * 60\n    this.setState({\n      dialogOpen: false\n    })\n  }\n\n  cancelDialog = () => {\n    this.setState({\n      dialogOpen: false\n    })\n  }\n\n  render() {\n    //console.log(`url(${backgroundImages[this.state.imageNum]})`)\n    return (\n      <Fade in={this.state.screenAvailable}>\n        <div className=\"App\" style={{backgroundImage: `url(${backgroundImages[this.state.imageNum]})`, minWidth: 1000}}>\n          {this.getSnackBar()}\n          <Dialog\n            open={this.state.dialogOpen}>\n            <DialogTitle>New time</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Choose new default timer lengths (reset timers to activate):\n              </DialogContentText>\n              <TextField \n                label=\"Main Timer\"\n                placeholder=\"(minutes)\"\n                margin=\"dense\"\n                autoFocus\n                style={{width: \"25%\", marginRight: \"8%\"}}\n                type=\"number\"\n                value={this.state.mainTimerChangeValue}\n                onChange={(e) => {\n                  if (e.target.value > 0 && e.target.value <= 60) {\n                    this.setState({\n                      mainTimerChangeValue: e.target.value\n                    })\n                  }\n                }}\n              />\n              <TextField \n                label=\"Shorter Break\"\n                placeholder=\"(minutes)\"\n                margin=\"dense\"\n                type=\"number\"\n                style={{width: \"25%\", marginRight: \"8%\"}}\n                value={this.state.shortTimerChangeValue}\n                onChange={(e) => {\n                  if (e.target.value > 0) {\n                    this.setState({\n                      shortTimerChangeValue: e.target.value\n                    })\n                  }\n                }}\n              />\n              <TextField \n                label=\"Longer Break\"\n                placeholder=\"(minutes)\"\n                margin=\"dense\"\n                style={{width: \"25%\", marginRight: \"8%\"}}\n                type=\"number\"\n                value={this.state.longTimerChangeValue}\n                onChange={(e) => {\n                  if (e.target.value > 0) {\n                    this.setState({\n                      longTimerChangeValue: e.target.value\n                    })\n                  }\n                }}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.cancelDialog} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={this.handleCloseDialog} color=\"primary\">\n                OK\n              </Button>\n            </DialogActions>\n          </Dialog>\n          <div className=\"Title\" style={{fontSize: \"5em\", paddingTop: 40}}>\n            Solanum\n          </div>\n          <div style={{margin: 10}}>\n            <i>Solanum lycopersicum</i>. Pomodoro. 🍅\n          </div>\n          <Tabs \n            className=\"Tabs\"\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            style={{margin: 0}}\n            onChange={this.handleTabChange}\n            value={this.state.activeTab}\n          >\n            <Tab label=\"Timer\" />\n            <Tab label=\"Shorter Break\" />\n            <Tab label=\"Longer Break\" />\n          </Tabs>\n          <Grid\n            container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{marginTop: 10}}>\n            <Paper className=\"Timer\" style={{paddingLeft: 25, paddingRight: 30, paddingBottom: 15}}>\n              {this.getMinutesDisplay()}\n              <div style={{fontSize: \"13em\", color: '#648baf', fontFamily: 'lato'}}>:</div>\n              {this.getSecondsDisplay()}\n            </Paper>\n          </Grid>\n          <Button color=\"primary\" onClick={this.resetTime} style={{margin: 10}}>Reset</Button>\n          <Button color={this.state.timer === null ? \"primary\" : \"secondary\"} onClick={this.toggleTimer}>{this.state.timer === null ? \"Start timer\" : \"Stop timer\"}</Button>\n          <Button color=\"primary\" onClick={this.changeDefaultTime} style={{margin: 10}}>Change times</Button>\n          <br/>\n          <Button style={{margin: 10, position: 'absolute', top: 0, right: 0}} onClick={this.incBackground}>Change background</Button>\n          {this.getDonateButton()}\n        </div>\n      </Fade>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}